Agile Development: GiggleGit
User Story: As a vanilla git power-user that has never seen GiggleGit before, I want to easily understand how GiggleGit's meme-based merge system relates to traditional git merges, so that I can quickly adapt my existing workflow to GiggleGit.
User Story: As a team lead onboarding an experienced GiggleGit user, I want to have access to advanced configuration options and team management tools, so that I can efficiently set up our team's GiggleGit environment and customize it to our needs.
User Story: As a new GiggleGit user with limited git experience, I want a guided tutorial that introduces me to both basic git concepts and GiggleGit's unique features, so that I can start using the system productively without feeling overwhelmed.
Task for the third user story:
Develop an interactive, step-by-step tutorial for new users
Two associated tickets:
Ticket 1:
Title: Create tutorial content outline
Details: Develop a comprehensive outline for the guided tutorial, covering basic git concepts (commit, branch, merge) and GiggleGit's unique features (meme-based merges, etc.). The outline should include key learning objectives for each section and a logical progression of topics.
Ticket 2:
Title: Implement interactive tutorial interface
Details: Design and implement an interactive interface for the tutorial within the GiggleGit application. This should include progress tracking, interactive examples where users can practice concepts, and the ability to pause and resume the tutorial. Ensure the interface is intuitive and visually appealing, incorporating GiggleGit's meme-based theme where appropriate.

3. The reason why this example is not a user story is because it lacks the context of who the user is (e.g., developer, team lead, etc.). It doesn't provide the benefit or value to the user (the "why") and it's too focused on a specific implementation detail rather than the user's goal. In return, this is instead a feature request or a functional requirement.
